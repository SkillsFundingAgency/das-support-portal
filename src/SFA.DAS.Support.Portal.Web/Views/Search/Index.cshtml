@using SFA.DAS.Support.Shared.Discovery
@using SFA.DAS.Support.Shared.SearchIndexModel
@model SFA.DAS.Support.Portal.Web.ViewModels.SearchResultsViewModel
@{
    Layout = "~/Views/Shared/_PortalLayout.cshtml";
    ViewBag.currentSection = "search";
    ViewBag.currentPage = "DAS Support-Search";
}


<section class="search no-search-term">
    <div class="grid-row">
        <div class="column-full">


            @using (Html.BeginForm("Index", "Search", FormMethod.Get, new { accept_charset = "utf-8", @class = "search-header search-header-2", role = "search", id = "searchForm" }))
            {
                <div class="searchfield form-group">
                    <fieldset class="search-input">
                        <h1 class="heading-large">Search</h1>
                        @Html.TextBoxFor(m => m.SearchTerm, string.Empty, new { id = "search-main", type = "search", @class = "form-control", placeholder = "Search", required = "required", maxlength = "100" })

                        <input type="hidden" name="Page" value="0" />
                    </fieldset>

                    <fieldset class="search-submit">
                        <button type="button" id="searchButton" class="button">Search</button>
                    </fieldset>
                </div>

                <div class="form-group">
                    <fieldset class="inline">

                        <div class="multiple-choice">
                            @Html.RadioButtonFor(m => m.SearchType, SearchCategory.User, new { id = "UserSearchType", @checked = "" })
                            <label for="UserSearchType">Users</label>
                        </div>
                        <div class="multiple-choice">
                            @Html.RadioButtonFor(m => m.SearchType, SearchCategory.Account, new { id = "AccountSearchType" })
                            <label for="AccountSearchType">Accounts</label>
                        </div>

                    </fieldset>
                </div>
            }

        </div>
    </div>

    <div class="grid-row">
        <div class="column-full">



            @if (Model.AccountSearchResults != null && Model.SearchType == SearchCategory.Account)
            {

                @ResultSummary(Model.TotalAccountSearchItems, "accounts")

                if (Model.AccountSearchResults.Any())
                {
                    <div class="grid-row">
                        <div class="column-full">
                            <table class="responsive">
                                <thead>
                                    <tr>
                                        <th scope="col">Account</th>
                                        <th scope="col">Account ID</th>
                                        <th scope="col"></th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var account in Model.AccountSearchResults)
                                    {
                                        <tr>
                                            <td data-label="Account">
                                                @account.Account
                                            </td>
                                            <td data-label="Account ID">
                                                @account.PublicAccountID
                                            </td>
                                            <td data-label="">
                                                @Html.ActionLink("view", "Index", "Resource",
                                                    new { key = SupportServiceResourceKey.EmployerAccount,
                                                        id = account.AccountID }, null)
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    </div>

                    @Pager()
                }
            }
            else if (Model.UserSearchResults != null && Model.SearchType == SearchCategory.User)
            {

                @ResultSummary(Model.TotalUserSearchItems, "users")


                if (Model.UserSearchResults.Any())
                {
                    <div class="grid-row">
                        <div class="column-full">
                            <table class="responsive">
                                <thead>
                                    <tr>
                                        <th scope="col">Name</th>
                                        <th scope="col">Email</th>
                                        <th scope="col">Account status</th>
                                        <th scope="col"></th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var user in Model.UserSearchResults)
                                    {
                                        <tr>
                                            <td data-label="Name">
                                                @user.Name
                                            </td>
                                            <td data-label="Email">
                                                @user.Email
                                            </td>
                                            <td data-label="Status">
                                                @user.Status
                                            </td>
                                            <td data-label="">
                                                @Html.ActionLink("view", "Index", "Resource", new { key = SupportServiceResourceKey.EmployerUser, id = user.Id }, null)
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    </div>

                    @Pager()
                }
            }
        </div>
    </div>
</section>


@helper Pager()
{
    <div class="grid-row">
        <div class="column-full">
            <div class="page-navigation">

                @if (Model.Page > 0)
                {
                    <a href="@Url.Action("Index", new { Model.SearchTerm, Page = Model.Page - 1, SearchType = Model.SearchType })" style="visibility: visible" class="page-navigation__btn prev">
                        <i class="arrow-button fa fa-angle-left"></i>
                        <span class="description">Previous <span class="hide-mob">page</span></span>

                        @{
                            var previousPageNumber = Model.Page;
                            if (previousPageNumber <= 0)
                            {
                                previousPageNumber = 1;
                            }
                            var lastPage = Model.LastPage + 1;

                            <span class="counter">@previousPageNumber of @lastPage</span>
                        }

                    </a>
                }

                @if (Model.Page != Model.LastPage)
                {
                    <a href="@Url.Action( "Index", new { Model.SearchTerm, Page = Model.Page + 1, SearchType = Model.SearchType })"
                       style="visibility: visible" class="page-navigation__btn next">
                        <i class="arrow-button fa fa-angle-right"></i>
                        <span class="description">Next <span class="hide-mob">page</span></span>


                        @{
                            var pageNumber = Model.Page + 2;
                            if (pageNumber <= 0)
                            {
                                pageNumber = 1;
                            }
                            var lastPage = Model.LastPage + 1;


                            <span class="counter">@pageNumber of @lastPage</span>
                        }
                    </a>
                }
            </div>
        </div>
    </div>

}

@helper ResultSummary(int totalSearchItems, string searchType)
{

    <div class="grid-row">
        <div class="column-two-thirds">

            <p class="font-xsmall">
                <a href="/">Clear search</a>
            </p>

            <br />

            <h2 class="heading-medium heading-medium__no-top-margin">Results</h2>
            <p> @totalSearchItems @searchType found</p>
        </div>
    </div>

}

@section script
{
    <script src="@Url.Content("~/assets/javascripts/search-index.js")" type="text/javascript"></script>
}